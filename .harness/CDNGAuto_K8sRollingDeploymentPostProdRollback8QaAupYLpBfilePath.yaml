pipeline:
  name: CDNGAuto_K8sRollingDeploymentPostProdRollback8QaAupYLpB
  identifier: CDNGAuto_K8sRollingDeploymentPostProdRollback8QaAupYLpB
  projectIdentifier: NGPipeAutoK8sgf6nNunraX
  orgIdentifier: Ng_Pipelines_K8s_Organisations
  tags: {}
  stages:
    - stage:
        name: s1
        identifier: s1
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: svcSw3
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: artifactId
                      sources:
                        - identifier: artifactId
                          type: Gcr
                          spec:
                            tag: <+input>
          environment:
            environmentRef: test
            deployToAll: false
            infrastructureDefinitions:
              - identifier: k8s_infra
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: echo <+serviceVariableOverrides.OverrideVar1>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - parallel:
                  - step:
                      type: ShellScript
                      name: parallel_1
                      identifier: parallel_1
                      spec:
                        shell: Bash
                        executionTarget: { }
                        source:
                          type: Inline
                          spec:
                            script: exit 0
                        environmentVariables: [ ]
                        outputVariables: [ ]
                      timeout: 10m
                  - step:
                      type: ShellScript
                      name: parallel_2
                      identifier: parallel_2
                      spec:
                        shell: Bash
                        executionTarget: { }
                        source:
                          type: Inline
                          spec:
                            script: exit 0
                        environmentVariables: [ ]
                        outputVariables: [ ]
                      timeout: 10m
            rollbackSteps:
              - stepGroup:
                  name: sg1
                  identifier: sg1
                  steps:
                    - step:
                        type: ShellScript
                        name: ShellScript_1
                        identifier: ShellScript_1
                        spec:
                          shell: Bash
                          executionTarget: {}
                          source:
                            type: Inline
                            spec:
                              script: |
                                echo <+pipeline.executionMode>
                                echo <+serviceVariableOverrides.OverrideVar1>
                                sleep 10
                          environmentVariables: []
                          outputVariables: []
                        timeout: 10m
                        when:
                          stageStatus: Success
                          condition: <+serviceVariableOverrides.OverrideVar1>!=null && <+serviceVariableOverrides.OverrideVar1>!='null'
                        strategy:
                          matrix:
                            overrideManifest: <+(<+serviceVariableOverrides.OverrideVar1>!=null && <+serviceVariableOverrides.OverrideVar1>!='null')?(<+<+serviceVariableOverrides.EnableSingularCanary>=='True'?[<+serviceVariableOverrides.OverrideManifestFilePath>]:<+serviceVariableOverrides.OverrideVar2.split(',')>>):['_null_']>
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
